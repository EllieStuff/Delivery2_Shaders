#pragma kernel CSMain

struct BoidInfo 
{
    float3 pos;
    float3 dir;

    float3 flockHeading;
    float3 flockCentre;
    float3 separationHeading;
    int nearMatesAmount;
};

RWStructuredBuffer<BoidInfo> _boids;
int _boidsLength;
float _awarenessDist;
float _avoidanceDist;

[numthreads(1024,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    for (int i = 0; i < _boidsLength; i++) 
    {
        if (id.x == i) continue;
        
        BoidInfo tmpBoid = _boids[i];
        float3 boidsVec = tmpBoid.pos - _boids[id.x].pos;
        float3 powBoidsVec = pow(boidsVec, 2);
        float sqrDist = powBoidsVec.x + powBoidsVec.y + powBoidsVec.z;

        if (sqrDist < pow(_awarenessDist, 2)) 
        {
            _boids[id.x].nearMatesAmount += 1;
            _boids[id.x].flockHeading += tmpBoid.dir;
            _boids[id.x].flockCentre += tmpBoid.pos;

            if (sqrDist < pow(_avoidanceDist, 2)) 
            {
                _boids[id.x].separationHeading -= boidsVec / sqrDist;
            }
        }
    }

}